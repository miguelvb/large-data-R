// This file was generated by Rcpp::compileAttributes
// Generator token: 10BE3573-1514-4C36-9D1C-5A225CD40393

#include <Rcpp.h>

using namespace Rcpp;

// roll_vector_nas
SEXP roll_vector_nas(SEXP x);
RcppExport SEXP LargeDataCppFunctions_roll_vector_nas(SEXP xSEXP) {
BEGIN_RCPP
    SEXP __sexp_result;
    {
        Rcpp::RNGScope __rngScope;
        SEXP x = Rcpp::as<SEXP >(xSEXP);
        SEXP __result = roll_vector_nas(x);
        PROTECT(__sexp_result = Rcpp::wrap(__result));
    }
    UNPROTECT(1);
    return __sexp_result;
END_RCPP
}
// subsetCpp
List subsetCpp(DataFrame data, IntegerVector indxs);
RcppExport SEXP LargeDataCppFunctions_subsetCpp(SEXP dataSEXP, SEXP indxsSEXP) {
BEGIN_RCPP
    SEXP __sexp_result;
    {
        Rcpp::RNGScope __rngScope;
        DataFrame data = Rcpp::as<DataFrame >(dataSEXP);
        IntegerVector indxs = Rcpp::as<IntegerVector >(indxsSEXP);
        List __result = subsetCpp(data, indxs);
        PROTECT(__sexp_result = Rcpp::wrap(__result));
    }
    UNPROTECT(1);
    return __sexp_result;
END_RCPP
}
// getSubsetSplit
List getSubsetSplit(DataFrame Dsexp, List split_idx, int beg_index, int end_index, Function fun);
RcppExport SEXP LargeDataCppFunctions_getSubsetSplit(SEXP DsexpSEXP, SEXP split_idxSEXP, SEXP beg_indexSEXP, SEXP end_indexSEXP, SEXP funSEXP) {
BEGIN_RCPP
    SEXP __sexp_result;
    {
        Rcpp::RNGScope __rngScope;
        DataFrame Dsexp = Rcpp::as<DataFrame >(DsexpSEXP);
        List split_idx = Rcpp::as<List >(split_idxSEXP);
        int beg_index = Rcpp::as<int >(beg_indexSEXP);
        int end_index = Rcpp::as<int >(end_indexSEXP);
        Function fun = Rcpp::as<Function >(funSEXP);
        List __result = getSubsetSplit(Dsexp, split_idx, beg_index, end_index, fun);
        PROTECT(__sexp_result = Rcpp::wrap(__result));
    }
    UNPROTECT(1);
    return __sexp_result;
END_RCPP
}
// getSplitIndexes
Rcpp::List getSplitIndexes(Rcpp::DataFrame Dsexp, SEXP split_row_name);
RcppExport SEXP LargeDataCppFunctions_getSplitIndexes(SEXP DsexpSEXP, SEXP split_row_nameSEXP) {
BEGIN_RCPP
    SEXP __sexp_result;
    {
        Rcpp::RNGScope __rngScope;
        Rcpp::DataFrame Dsexp = Rcpp::as<Rcpp::DataFrame >(DsexpSEXP);
        SEXP split_row_name = Rcpp::as<SEXP >(split_row_nameSEXP);
        Rcpp::List __result = getSplitIndexes(Dsexp, split_row_name);
        PROTECT(__sexp_result = Rcpp::wrap(__result));
    }
    UNPROTECT(1);
    return __sexp_result;
END_RCPP
}
// Lapply
List Lapply(List data, Function fun);
RcppExport SEXP LargeDataCppFunctions_Lapply(SEXP dataSEXP, SEXP funSEXP) {
BEGIN_RCPP
    SEXP __sexp_result;
    {
        Rcpp::RNGScope __rngScope;
        List data = Rcpp::as<List >(dataSEXP);
        Function fun = Rcpp::as<Function >(funSEXP);
        List __result = Lapply(data, fun);
        PROTECT(__sexp_result = Rcpp::wrap(__result));
    }
    UNPROTECT(1);
    return __sexp_result;
END_RCPP
}
// getChunksIndexesForSplitList
DataFrame getChunksIndexesForSplitList(DataFrame data_, List split_indx, int chk_size);
RcppExport SEXP LargeDataCppFunctions_getChunksIndexesForSplitList(SEXP data_SEXP, SEXP split_indxSEXP, SEXP chk_sizeSEXP) {
BEGIN_RCPP
    SEXP __sexp_result;
    {
        Rcpp::RNGScope __rngScope;
        DataFrame data_ = Rcpp::as<DataFrame >(data_SEXP);
        List split_indx = Rcpp::as<List >(split_indxSEXP);
        int chk_size = Rcpp::as<int >(chk_sizeSEXP);
        DataFrame __result = getChunksIndexesForSplitList(data_, split_indx, chk_size);
        PROTECT(__sexp_result = Rcpp::wrap(__result));
    }
    UNPROTECT(1);
    return __sexp_result;
END_RCPP
}
